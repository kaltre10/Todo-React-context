{"version":3,"sources":["components/Search.js","components/TodoItem.js","components/AddTask.js","components/TodoList.js","modals/index.js","hooks/useLocalstorage.js","hooks/useTodo.js","components/Loader.js","components/ChangeAlert.js","hooks/useStorageListener.js","App.js","index.js"],"names":["Search","children","TodoItem","task","addCompleted","tasksDelete","class","onClick","id","completed","className","name","AddTask","loading","openModal","type","TodoList","tasks","searchTask","onLoading","onEmptyTodos","onSearchTask","sincronize","render","propsFunc","length","map","Modal","createPortal","document","getElementById","useLocalStarege","itemName","initialStorage","useState","setLoading","error","setError","storageItem","setStorageItem","setSincronize","useEffect","setTimeout","getItem","JSON","parse","localStorage","items","setItem","stringify","useTodo","search","setSearch","stateModal","setModal","setTasks","activeSincronize","filter","toLowerCase","includes","newTaks","uuidv4","newTasks","Loader","props","title","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","ChangeAlert","show","toggleShow","useStorageListener","setShow","window","addEventListener","change","key","App","tasksCompleted","addTaskContext","input","setInput","errorInput","setErrorInput","inputValue","placeholder","onChange","e","target","value","disabled","trim","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8ca4bd6f.chunk.js","sourcesContent":["import { Fragment } from \"react\";\r\n\r\nconst Search = ({ children }) => <Fragment>{ children }</Fragment>\r\n \r\nexport default Search;","\r\nconst TodoItem = ({task, addCompleted, tasksDelete}) => {\r\n\r\n    return (\r\n        <li>\r\n            <span class=\"btn\" onClick={() => addCompleted(task.id)}>{task.completed ? '✔️' : '⏲️'}</span>\r\n            <span className={task.completed && \"completed\"}>{task.name}</span>\r\n            <span class=\"btn\"  onClick={() => tasksDelete(task.id)}> ❌ </span>\r\n        </li> \r\n     );\r\n}\r\n \r\nexport default TodoItem;","import { Fragment } from \"react\";\r\n\r\nconst AddTask = ({ loading, openModal }) => \r\n    <form>\r\n        <button type='button' onClick={openModal} className='btn-add-task'>+</button>\r\n    </form>\r\nexport default AddTask;","import { Fragment } from \"react\";\r\n\r\nconst TodoList = ({loading, tasks, searchTask, onLoading, onEmptyTodos, onSearchTask, sincronize, render, children}) => {\r\n    const propsFunc = children || render;\r\n    return (\r\n        <Fragment>\r\n            { loading && onLoading() }\r\n            { tasks.length === 0 && !loading && onEmptyTodos() } \r\n            { searchTask.length === 0 && tasks.length > 0 && onSearchTask() }      \r\n            \r\n            {tasks.length > 0  && sincronize &&\r\n               <ul>\r\n                {searchTask.map(propsFunc)}\r\n               </ul>  \r\n            }\r\n            \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default TodoList;","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport '../index.css';\r\n\r\nconst Modal = ({children}) => {\r\n  return createPortal(\r\n      <div className='modal-container'>\r\n        {children}\r\n      </div>,\r\n      document.getElementById('modal')\r\n  );\r\n}\r\n \r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStarege = (itemName, initialStorage) => {\r\n\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ error, setError ] = useState(false);\r\n    const [ storageItem, setStorageItem ] = useState( initialStorage );\r\n    const [ sincronize, setSincronize ] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        try {\r\n          const getItem = JSON.parse(localStorage.getItem(itemName)) || initialStorage;\r\n          setStorageItem([...getItem]);\r\n          setLoading(false);\r\n          setSincronize(true);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      }, 1000);\r\n      //eslint-disable-next-line\r\n    }, [sincronize]);\r\n  \r\n    const setLocal = items => {\r\n      try {\r\n        localStorage.setItem(itemName, JSON.stringify(items));\r\n        setStorageItem([...items]);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }\r\n\r\n    const activeSincronize = () => {\r\n      setLoading(true);\r\n      setSincronize(false);\r\n    }\r\n  \r\n    return [\r\n      storageItem,\r\n      setLocal,\r\n      loading,\r\n      error,\r\n      sincronize,\r\n      activeSincronize\r\n    ];\r\n  \r\n  }\r\n\r\nexport default useLocalStarege;","import { useState } from \"react\";\r\nimport useLocalStarege from '../hooks/useLocalstorage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst useTodo = () => {\r\n\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    const [ stateModal, setModal ] = useState(false);\r\n\r\n    const [ tasks, setTasks, loading, error, sincronize,  activeSincronize ] = useLocalStarege('tasksLocal', []);\r\n \r\n    let searchTask;\r\n\r\n    search !== ''\r\n        ? searchTask = tasks.filter(task => task.name.toLowerCase().includes(search.toLowerCase()))\r\n        : searchTask = tasks\r\n\r\n    const tasksCompleted = () => \r\n        tasks.filter(task => task.completed === true).length;\r\n\r\n    const tasksDelete = id => setTasks([ ...tasks.filter(task => task.id !== id )]);\r\n\r\n    const openModal = () => setModal(stateModal ? false : true);\r\n\r\n    const addTaskContext = task =>  {\r\n        const newTaks = { \r\n            id: uuidv4(),\r\n            name: task,\r\n            completed: false\r\n         }\r\n        setTasks( [ ...tasks, newTaks ] );\r\n        openModal();\r\n    };\r\n\r\n    const addCompleted = id => {\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id) {\r\n                task.completed ? task.completed = false : task.completed = true;\r\n            }\r\n            return task;\r\n        });\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    return  [\r\n                search,\r\n                setSearch,\r\n                tasks,\r\n                setTasks,\r\n                loading,\r\n                error,\r\n                searchTask,\r\n                tasksCompleted,\r\n                tasksDelete,\r\n                stateModal,\r\n                openModal,\r\n                addTaskContext,\r\n                addCompleted,\r\n                sincronize,\r\n                activeSincronize\r\n            ];\r\n\r\n}\r\n\r\nexport default useTodo;","import ContentLoader from 'react-content-loader'\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <ContentLoader\r\n      title='loading...'\r\n      speed={2}\r\n      width={300}\r\n      height={100}\r\n      viewBox=\"0 0 400 160\"\r\n      backgroundColor=\"#d9d9d9\"\r\n      foregroundColor=\"#ededed\"\r\n      {...props}\r\n    >\r\n      <rect x=\"50\" y=\"6\" rx=\"4\" ry=\"4\" width=\"320\" height=\"10\" />\r\n      <rect x=\"8\" y=\"6\" rx=\"4\" ry=\"4\" width=\"35\" height=\"10\" />\r\n      <rect x=\"50\" y=\"55\" rx=\"4\" ry=\"4\" width=\"320\" height=\"10\" />\r\n      <rect x=\"8\" y=\"55\" rx=\"4\" ry=\"4\" width=\"35\" height=\"10\" />\r\n    </ContentLoader>\r\n  )\r\n}\r\n\r\nexport default Loader","import { Fragment } from \"react\";\r\n\r\nconst ChangeAlert = ({show, toggleShow}) => {\r\n    if(show){\r\n        return (\r\n            <Fragment>\r\n                <p>Hubo cambios en tasksLocal</p>\r\n                <button onClick={() => toggleShow(false)}>Refrescar</button>\r\n            </Fragment>\r\n        )\r\n    }else{\r\n        return null;\r\n    }\r\n    \r\n}\r\n \r\nexport default ChangeAlert;","import {useState} from \"react\";\r\n\r\nconst useStorageListener = (activeSincronize) => {\r\n    \r\n        const [ show, setShow ] = useState(false);\r\n\r\n        window.addEventListener('storage', change => {\r\n            if(change.key === 'tasksLocal'){\r\n                setShow(true);\r\n            }\r\n        });\r\n\r\n        const toggleShow = () => {\r\n            activeSincronize();\r\n            setShow(false);\r\n        }\r\n\r\n        return {\r\n            show, \r\n            toggleShow\r\n        }\r\n}\r\n \r\nexport default useStorageListener;","import { useState } from 'react';\nimport Search from './components/Search';\nimport TodoItem from './components/TodoItem';\nimport AddTask from './components/AddTask';\nimport TodoList from './components/TodoList';\nimport Modal from './modals';\nimport useTodo from './hooks/useTodo';\nimport Loader from './components/Loader';\nimport ChangeAlert from './components/ChangeAlert';\nimport useStorageListener from './hooks/useStorageListener';\n\nfunction App() {\n\n  const [\n        search,\n        setSearch,\n        tasks,\n        setTasks,\n        loading,\n        error,\n        searchTask,\n        tasksCompleted,\n        tasksDelete,\n        stateModal,\n        openModal,\n        addTaskContext,\n        addCompleted,\n        sincronize,\n        activeSincronize\n    ] = useTodo();\n\n    const { show, toggleShow } = useStorageListener(activeSincronize);\n\n    const [ input, setInput ] = useState('');\n    const [ errorInput, setErrorInput] = useState(false);\n\n    const onChangeInput = e => {\n      setErrorInput(false);\n      setInput(e.target.value);\n    };\n\n    const addTask = () => {\n\n      if(input.trim() === ''){\n        setErrorInput(true);\n        setInput('');\n        return;\n      }\n      \n      setInput('');\n      addTaskContext(input);\n      setErrorInput(false);\n    }\n    \n    const { inputValue } = input; \n\n    return ( \n\n        <div className=\"App\">\n\n            <h1>Todo React</h1>\n            {searchTask.length > 0 &&\n              <p>Has completado {tasksCompleted()} de {searchTask.length} tareas</p>}\n\n            <Search>\n              <form>\n                  <input \n                      type=\"text\" \n                      placeholder='Search...'\n                      onChange={e => setSearch(e.target.value)}\n                      disabled={loading}\n                  />\n              </form>\n            </Search>\n\n            <TodoList\n               loading={loading}\n               tasks={tasks}\n               searchTask={searchTask} \n               sincronize={sincronize} \n               onLoading={() =>  <Loader />}\n               onEmptyTodos={() =>  <p> No hay Tareas Agregadas..!</p>}\n               onSearchTask={() => <p> No hay Resultados..!</p>}\n               tasks={tasks}\n               render={ task => \n                <TodoItem\n                  key={task.id}\n                  task={task}\n                  addCompleted={addCompleted}\n                  tasksDelete={tasksDelete}\n                />}\n            >\n              {/* {task => \n                <TodoItem\n                  key={task.id}\n                  task={task}\n                  addCompleted={addCompleted}\n                  tasksDelete={tasksDelete}\n                />} */}\n            </TodoList>\n                \n            {stateModal &&\n              <Modal>\n                <div className='modal'>\n                  <h3>Agregra una nueva Tarea</h3>\n                  <form>\n                    <div>\n                        <textarea \n                          className={ errorInput ? 'error-input' : ''}\n                          onChange={onChangeInput} \n                          value={inputValue}>\n                        </textarea>\n                    </div>\n                    <button type='button' onClick={addTask}>Añadir</button>\n                    <button type='button' onClick={openModal}>Cancelar</button>\n                  </form>\n                </div>\n              </Modal>}\n            \n            <AddTask \n              loading={loading}\n              openModal={openModal}\n            />\n\n            <ChangeAlert show={show} toggleShow={toggleShow} />\n        </div>\n     );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}