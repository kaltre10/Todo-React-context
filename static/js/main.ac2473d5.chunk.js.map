{"version":3,"sources":["hooks/useLocalstorage.js","todoContext/index.js","components/Search.js","components/TodoItem.js","components/AddTask.js","modals/index.js","components/TodoUI.js","App.js","index.js"],"names":["useLocalStarege","itemName","initialStorage","useState","loading","setLoading","error","setError","storageItem","setStorageItem","useEffect","setTimeout","getItem","JSON","parse","localStorage","items","setItem","stringify","TodoContext","createContext","TodoProvider","props","searchTask","search","setSearch","stateModal","setModal","tasks","setTasks","filter","task","name","toLowerCase","includes","openModal","Provider","value","tasksCompleted","completed","length","tasksDelete","id","addTaskContext","newTaks","uuidv4","addCompleted","newTasks","map","children","Search","type","placeholder","onChange","e","target","TodoItem","class","onClick","className","AddTask","useContext","Modal","createPortal","document","getElementById","TodoIU","input","setInput","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac2473d5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStarege = (itemName, initialStorage) => {\r\n\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ error, setError ] = useState(false);\r\n    const [ storageItem, setStorageItem ] = useState( initialStorage );\r\n  \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        try {\r\n          const getItem = JSON.parse(localStorage.getItem(itemName)) || initialStorage;\r\n          setStorageItem([...getItem]);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      }, 1000);\r\n      //eslint-disable-next-line\r\n    }, []);\r\n  \r\n    const setLocal = items => {\r\n      try {\r\n        localStorage.setItem(itemName, JSON.stringify(items));\r\n        setStorageItem([...items]);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }\r\n  \r\n    return [\r\n      storageItem,\r\n      setLocal,\r\n      loading,\r\n      error\r\n    ];\r\n  \r\n  }\r\n\r\nexport default useLocalStarege;","import { useState, createContext } from \"react\";\r\nimport useLocalStarege from '../hooks/useLocalstorage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst TodoContext = createContext();\r\n\r\nconst TodoProvider = props => {\r\n\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    const [ stateModal, setModal ] = useState(false);\r\n\r\n    const [ tasks, setTasks, loading, error ] = useLocalStarege('tasksLocal', []);\r\n\r\n    let searchTask;\r\n\r\n    search !== ''\r\n        ? searchTask = tasks.filter(task => task.name.toLowerCase().includes(search.toLowerCase()))\r\n        : searchTask = tasks\r\n\r\n    const tasksCompleted = () => \r\n        tasks.filter(task => task.completed === true).length;\r\n\r\n    const tasksDelete = id => setTasks([ ...tasks.filter(task => task.id !== id )]);\r\n\r\n    const openModal = () => setModal(stateModal ? false : true);\r\n\r\n    const addTaskContext = task =>  {\r\n        const newTaks = { \r\n            id: uuidv4(),\r\n            name: task,\r\n            completed: false\r\n         }\r\n        setTasks( [ ...tasks, newTaks ] );\r\n        openModal();\r\n    };\r\n\r\n    const addCompleted = id => {\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id) {\r\n                task.completed ? task.completed = false : task.completed = true;\r\n            }\r\n            return task;\r\n        });\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    return(\r\n        <TodoContext.Provider\r\n            value={{\r\n                search,\r\n                setSearch,\r\n                tasks,\r\n                setTasks,\r\n                loading,\r\n                error,\r\n                searchTask,\r\n                tasksCompleted,\r\n                tasksDelete,\r\n                stateModal,\r\n                openModal,\r\n                addTaskContext,\r\n                addCompleted\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport { TodoContext, TodoProvider }","const Search = ({ setSearch }) => {\r\n\r\n    const inputSearch = e => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    return ( \r\n        <form>\r\n            <input \r\n                type=\"text\" \r\n                placeholder='Search...'\r\n                onChange={inputSearch}\r\n            />\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Search;","\r\nconst TodoItem = ({task, tasksDelete, addCompleted}) => {\r\n\r\n    return ( \r\n        <li>\r\n            <span class=\"btn\" onClick={() => addCompleted(task.id)}>{task.completed ? '✔️' : '⏲️'}</span>\r\n            <span className={task.completed ? \"completed\" : null}>{task.name}</span>\r\n            <span class=\"btn\"  onClick={() => tasksDelete(task.id)}> ❌ </span>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default TodoItem;","import { useContext } from 'react';\r\nimport { TodoContext } from '../todoContext';\r\n\r\nconst AddTask = () => {\r\n\r\n    const { openModal } = useContext(TodoContext);\r\n    \r\n    return ( \r\n        <form>\r\n            <button type='button' onClick={openModal} className='btn-add-task'>+</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport '../index.css';\r\n\r\nconst Modal = ({children}) => {\r\n  return createPortal(\r\n      <div className='modal-container'>\r\n        {children}\r\n      </div>,\r\n      document.getElementById('modal')\r\n  );\r\n}\r\n \r\nexport default Modal;\r\n","import { useState, useContext } from 'react';\r\nimport Search from './Search';\r\nimport TodoItem from './TodoItem';\r\nimport AddTask from './AddTask';\r\nimport { TodoContext } from '../todoContext';\r\nimport Modal from '../modals';\r\n\r\nconst TodoIU = () => {\r\n\r\n    const {\r\n        setSearch,\r\n        tasks,\r\n        loading,\r\n        searchTask,\r\n        tasksCompleted,\r\n        tasksDelete,\r\n        stateModal,\r\n        openModal,\r\n        addTaskContext,\r\n        addCompleted\r\n    } = useContext(TodoContext);\r\n\r\n    const [ input, setInput ] = useState('');\r\n\r\n    const onChangeInput = e => setInput(e.target.value);\r\n    \r\n    return ( \r\n\r\n        <div className=\"App\">\r\n\r\n            <h1>Todo React</h1>\r\n\r\n            {(searchTask.length > 0 && !loading)\r\n              ?<p>Has completado {tasksCompleted()} de {searchTask.length} tareas</p>\r\n              : null}\r\n\r\n            <Search \r\n              setSearch={setSearch} \r\n            />\r\n\r\n            { loading \r\n              ? <p> loading... </p>\r\n              : (\r\n                  <ul>\r\n                    {tasks.length > 0\r\n                      ? ( searchTask.map( task => \r\n                            <TodoItem\r\n                              key={task.id}\r\n                              task={task}\r\n                              tasksDelete={tasksDelete}\r\n                              addCompleted={addCompleted}\r\n                            />)   \r\n                        )\r\n                      : <p> No hay Tareas Agregadas..!</p>\r\n                    }\r\n                  </ul>\r\n                )\r\n            }\r\n            { stateModal\r\n              ? (\r\n                  <Modal>\r\n                    <div className='modal'>\r\n                      <h3>Agregra una nueva Tarea</h3>\r\n                      <form>\r\n                        <div><textarea onChange={onChangeInput}></textarea></div>\r\n                        <button type='button' onClick={ () => addTaskContext(input)}>Añadir</button>\r\n                        <button type='button' onClick={openModal}>Cancelar</button>\r\n                      </form>\r\n                    </div>\r\n                  </Modal>\r\n                )\r\n              : null\r\n            }\r\n            \r\n            <AddTask />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoIU;","import { TodoProvider } from './todoContext';\nimport TodoIU from './components/TodoUI';\n\nfunction App() {\n  return (\n    <TodoProvider>\n        <TodoIU />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}